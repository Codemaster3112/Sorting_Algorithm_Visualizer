# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'heap_sort.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QMovie
def main():
    class Ui_MainWindow(object):
        def setupUi(self, MainWindow):
            MainWindow.setObjectName("MainWindow")
            MainWindow.resize(981, 882)
            MainWindow.setMaximumSize(QtCore.QSize(1050, 16777215))
            MainWindow.setStyleSheet('background:#001219; color:#ee9b00')

            self.centralwidget = QtWidgets.QWidget(MainWindow)
            self.centralwidget.setObjectName("centralwidget")
            self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
            self.scrollArea.setGeometry(QtCore.QRect(10, 5, 971, 851))
            self.scrollArea.setMinimumSize(QtCore.QSize(0, 800))
            self.scrollArea.setStyleSheet("border:none")
            self.scrollArea.setWidgetResizable(True)
            self.scrollArea.setObjectName("scrollArea")
            self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
            self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 950, 918))
            self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
            self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_2)
            self.verticalLayout_3.setObjectName("verticalLayout_3")
            self.frame = QtWidgets.QFrame(self.scrollAreaWidgetContents_2)
            self.frame.setMinimumSize(QtCore.QSize(0, 900))
            self.frame.setStyleSheet("")
            self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
            self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
            self.frame.setObjectName("frame")
            self.gif_label = QtWidgets.QLabel(self.frame)
            self.gif_label.setGeometry(QtCore.QRect(20, 230, 431, 211))
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(14)
            self.gif_label.setFont(font)
            self.gif_label.setScaledContents(True)
            self.gif_label.setObjectName("gif_label")
            self.algo_header = QtWidgets.QLabel(self.frame)
            self.algo_header.setGeometry(QtCore.QRect(10, 460, 331, 41))
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(20)
            font.setBold(True)
            font.setWeight(75)
            self.algo_header.setFont(font)
            self.algo_header.setObjectName("algo_header")
            self.header_label = QtWidgets.QLabel(self.frame)
            self.header_label.setGeometry(QtCore.QRect(0, 10, 331, 51))
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(25)
            font.setBold(True)
            font.setWeight(75)
            self.header_label.setFont(font)
            self.header_label.setLayoutDirection(QtCore.Qt.LeftToRight)
            self.header_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
            self.header_label.setObjectName("header_label")
            self.info_label = QtWidgets.QLabel(self.frame)
            self.info_label.setGeometry(QtCore.QRect(0, 70, 921, 141))
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(14)
            font.setBold(False)
            font.setWeight(50)
            self.info_label.setFont(font)
            self.info_label.setFocusPolicy(QtCore.Qt.NoFocus)
            self.info_label.setScaledContents(True)
            self.info_label.setAlignment(QtCore.Qt.AlignJustify|QtCore.Qt.AlignTop)
            self.info_label.setWordWrap(True)
            self.info_label.setIndent(1)
            self.info_label.setObjectName("info_label")
            self.complexity = QtWidgets.QLabel(self.frame)
            self.complexity.setGeometry(QtCore.QRect(10, 690, 211, 41))
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(20)
            font.setBold(True)
            font.setWeight(75)
            self.complexity.setFont(font)
            self.complexity.setLayoutDirection(QtCore.Qt.LeftToRight)
            self.complexity.setTextFormat(QtCore.Qt.PlainText)
            self.complexity.setObjectName("complexity")
            self.algorithm = QtWidgets.QLabel(self.frame)
            self.algorithm.setGeometry(QtCore.QRect(10, 520, 891, 161))
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(14)
            self.algorithm.setFont(font)
            self.algorithm.setFrameShadow(QtWidgets.QFrame.Plain)
            self.algorithm.setTextFormat(QtCore.Qt.AutoText)
            self.algorithm.setScaledContents(True)
            self.algorithm.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
            self.algorithm.setWordWrap(True)
            self.algorithm.setIndent(-1)
            self.algorithm.setObjectName("algorithm")
            self.complexity_table = QtWidgets.QTableWidget(self.frame)
            self.complexity_table.setGeometry(QtCore.QRect(30, 750, 501, 61))
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(12)
            self.complexity_table.setFont(font)
            self.complexity_table.setLayoutDirection(QtCore.Qt.LeftToRight)
            self.complexity_table.setFrameShadow(QtWidgets.QFrame.Sunken)
            self.complexity_table.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
            self.complexity_table.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
            self.complexity_table.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
            self.complexity_table.setGridStyle(QtCore.Qt.SolidLine)
            self.complexity_table.setObjectName("complexity_table")
            self.complexity_table.setColumnCount(5)
            self.complexity_table.setRowCount(1)
            item = QtWidgets.QTableWidgetItem()
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(12)
            item.setFont(font)
            item.setBackground(QtGui.QColor(255, 255, 255))
            self.complexity_table.setVerticalHeaderItem(0, item)
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignCenter)
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(12)
            item.setFont(font)
            self.complexity_table.setHorizontalHeaderItem(0, item)
            item = QtWidgets.QTableWidgetItem()
            self.complexity_table.setHorizontalHeaderItem(1, item)
            item = QtWidgets.QTableWidgetItem()
            self.complexity_table.setHorizontalHeaderItem(2, item)
            item = QtWidgets.QTableWidgetItem()
            self.complexity_table.setHorizontalHeaderItem(3, item)
            item = QtWidgets.QTableWidgetItem()
            self.complexity_table.setHorizontalHeaderItem(4, item)
            item = QtWidgets.QTableWidgetItem()

            item.setTextAlignment(QtCore.Qt.AlignCenter)
            self.complexity_table.setItem(0, 0, item)
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignCenter)
            self.complexity_table.setItem(0, 1, item)
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignCenter)
            self.complexity_table.setItem(0, 2, item)
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignCenter)
            self.complexity_table.setItem(0, 3, item)
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignCenter)
            self.complexity_table.setItem(0, 4, item)
            self.complexity_table.horizontalHeader().setVisible(True)
            self.complexity_table.horizontalHeader().setCascadingSectionResizes(False)
            self.complexity_table.horizontalHeader().setHighlightSections(False)
            self.complexity_table.verticalHeader().setVisible(False)
            self.complexity_table.verticalHeader().setHighlightSections(True)
            self.verticalLayout_3.addWidget(self.frame)
            self.scrollArea.setWidget(self.scrollAreaWidgetContents_2)
            MainWindow.setCentralWidget(self.centralwidget)
            self.statusbar = QtWidgets.QStatusBar(MainWindow)
            self.statusbar.setObjectName("statusbar")
            MainWindow.setStatusBar(self.statusbar)

            self.retranslateUi(MainWindow)
            QtCore.QMetaObject.connectSlotsByName(MainWindow)

        def retranslateUi(self, MainWindow):
            _translate = QtCore.QCoreApplication.translate
            MainWindow.setWindowTitle(_translate("MainWindow", "Heap Sort"))

            self.gif_label.setText(_translate("MainWindow", "Heap-sort-example-gif"))
            self.movie = QMovie(r".\gifs\heapsort.gif")
            self.gif_label.setMovie(self.movie)
            self.movie.start()

            self.algo_header.setText(_translate("MainWindow", "Algorithm:"))
            self.header_label.setText(_translate("MainWindow", "Heap Sort"))
            self.info_label.setText(_translate("MainWindow", "Heapsort is a comparison-based sorting algorithm. Heapsort can be thought of as an improved selection sort: like that algorithm, it divides its input into a sorted and an unsorted region, and it iteratively shrinks the unsorted region by extracting the largest element and moving that to the sorted region. The improvement consists of the use of a heap data structure rather than a linear-time search to find the maximum."))
            self.complexity.setText(_translate("MainWindow", "Complexity"))
            self.algorithm.setText(_translate("MainWindow", "Step 1- Initially build a max heap of elements in Arr.\n"
    "Step 2- The root element, that is Arr[1], will contain maximum element of Arr. After that, swap this element with the last element of Arr and heapify the max heap excluding the last element which is already in its correct position and then decrease the length of heap by one.\n"
    "Step 3- Repeat the step 2, until all the elements are in their correct position.\n"
    ""))
            item = self.complexity_table.verticalHeaderItem(0)
            item.setText(_translate("MainWindow", "HeapSort"))
            item = self.complexity_table.horizontalHeaderItem(0)
            item.setText(_translate("MainWindow", "Best"))
            item = self.complexity_table.horizontalHeaderItem(1)
            item.setText(_translate("MainWindow", "Average"))
            item = self.complexity_table.horizontalHeaderItem(2)
            item.setText(_translate("MainWindow", "Worst"))
            item = self.complexity_table.horizontalHeaderItem(3)
            item.setText(_translate("MainWindow", "Memory"))
            item = self.complexity_table.horizontalHeaderItem(4)
            item.setText(_translate("MainWindow", "Stable"))
            __sortingEnabled = self.complexity_table.isSortingEnabled()
            self.complexity_table.setSortingEnabled(False)
            item = self.complexity_table.item(0, 0)
            item.setText(_translate("MainWindow", "n log(n)"))
            item = self.complexity_table.item(0, 1)
            item.setText(_translate("MainWindow", "n log(n)"))
            item = self.complexity_table.item(0, 2)
            item.setText(_translate("MainWindow", "n log(n)"))
            item = self.complexity_table.item(0, 3)
            item.setText(_translate("MainWindow", "1"))
            item = self.complexity_table.item(0, 4)
            item.setText(_translate("MainWindow", "No"))
            self.complexity_table.setSortingEnabled(__sortingEnabled)



    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    app.exec_()

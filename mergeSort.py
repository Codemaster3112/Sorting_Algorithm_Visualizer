# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'merge_sort.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QMovie

def main():

    class Ui_MainWindow(object):
        def setupUi(self, MainWindow):
            MainWindow.setObjectName("MainWindow")
            MainWindow.resize(1000, 986)
            MainWindow.setMinimumSize(QtCore.QSize(986, 980))
            MainWindow.setMaximumSize(QtCore.QSize(990, 980))


            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
            MainWindow.setSizePolicy(sizePolicy)
            MainWindow.setMinimumSize(QtCore.QSize(971, 800))
            MainWindow.setMaximumSize(QtCore.QSize(1000, 1050))
            MainWindow.setFocusPolicy(QtCore.Qt.WheelFocus)
            MainWindow.setAcceptDrops(False)
            MainWindow.setAutoFillBackground(True)

            MainWindow.setStyleSheet('background:#001219; color:#ee9b00')

            MainWindow.setDocumentMode(False)
            MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
            self.centralwidget = QtWidgets.QWidget(MainWindow)
            self.centralwidget.setObjectName("centralwidget")
            self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
            self.verticalLayout.setObjectName("verticalLayout")
            self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Ignored)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.scrollArea.sizePolicy().hasHeightForWidth())
            self.scrollArea.setSizePolicy(sizePolicy)
            self.scrollArea.setMinimumSize(QtCore.QSize(0, 500))
            self.scrollArea.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.WaitCursor))
            self.scrollArea.setAcceptDrops(False)
            self.scrollArea.setAutoFillBackground(True)
            self.scrollArea.setStyleSheet("border:none;\n"
    "QScrollBar\n"
    "{\n"
    "background : lightgreen;}")
            self.scrollArea.setFrameShadow(QtWidgets.QFrame.Sunken)
            self.scrollArea.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
            self.scrollArea.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
            self.scrollArea.setWidgetResizable(True)
            self.scrollArea.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
            self.scrollArea.setObjectName("scrollArea")
            self.scrollAreaWidgetContents = QtWidgets.QWidget()
            self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 961, 1018))
            self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
            self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
            self.verticalLayout_2.setObjectName("verticalLayout_2")
            self.frame = QtWidgets.QFrame(self.scrollAreaWidgetContents)
            self.frame.setMinimumSize(QtCore.QSize(0, 1000))
            self.frame.setAcceptDrops(False)
            self.frame.setStyleSheet("border:none")
            self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
            self.frame.setFrameShadow(QtWidgets.QFrame.Plain)
            self.frame.setObjectName("frame")
            self.complexity_table = QtWidgets.QTableWidget(self.frame)
            self.complexity_table.setGeometry(QtCore.QRect(30, 930, 501, 61))
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(12)
            self.complexity_table.setFont(font)
            self.complexity_table.setLayoutDirection(QtCore.Qt.LeftToRight)
            self.complexity_table.setFrameShadow(QtWidgets.QFrame.Sunken)
            self.complexity_table.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
            self.complexity_table.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
            self.complexity_table.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
            self.complexity_table.setGridStyle(QtCore.Qt.SolidLine)
            self.complexity_table.setObjectName("complexity_table")
            self.complexity_table.setColumnCount(5)
            self.complexity_table.setRowCount(1)
            item = QtWidgets.QTableWidgetItem()
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(12)
            item.setFont(font)
            item.setBackground(QtGui.QColor(255, 255, 255))
            self.complexity_table.setVerticalHeaderItem(0, item)
            item = QtWidgets.QTableWidgetItem()
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(12)
            item.setFont(font)
            self.complexity_table.setHorizontalHeaderItem(0, item)
            item = QtWidgets.QTableWidgetItem()
            self.complexity_table.setHorizontalHeaderItem(1, item)
            item = QtWidgets.QTableWidgetItem()
            self.complexity_table.setHorizontalHeaderItem(2, item)
            item = QtWidgets.QTableWidgetItem()
            self.complexity_table.setHorizontalHeaderItem(3, item)
            item = QtWidgets.QTableWidgetItem()
            self.complexity_table.setHorizontalHeaderItem(4, item)
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignCenter)
            self.complexity_table.setItem(0, 0, item)
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignCenter)
            self.complexity_table.setItem(0, 1, item)
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignCenter)
            self.complexity_table.setItem(0, 2, item)
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignCenter)
            self.complexity_table.setItem(0, 3, item)
            item = QtWidgets.QTableWidgetItem()
            item.setTextAlignment(QtCore.Qt.AlignCenter)
            self.complexity_table.setItem(0, 4, item)
            self.complexity_table.horizontalHeader().setVisible(True)
            self.complexity_table.horizontalHeader().setCascadingSectionResizes(False)
            self.complexity_table.horizontalHeader().setHighlightSections(True)
            self.complexity_table.verticalHeader().setVisible(False)
            self.complexity_table.verticalHeader().setHighlightSections(True)
            self.complexity = QtWidgets.QLabel(self.frame)
            self.complexity.setGeometry(QtCore.QRect(10, 880, 211, 31))
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(16)
            font.setBold(True)
            font.setWeight(75)
            self.complexity.setFont(font)
            self.complexity.setLayoutDirection(QtCore.Qt.LeftToRight)
            self.complexity.setTextFormat(QtCore.Qt.PlainText)
            self.complexity.setObjectName("complexity")
            self.algo_label = QtWidgets.QLabel(self.frame)
            self.algo_label.setGeometry(QtCore.QRect(20, 540, 331, 41))
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(20)
            font.setBold(True)
            font.setWeight(75)
            self.algo_label.setFont(font)
            self.algo_label.setObjectName("algo_label")
            self.header_label = QtWidgets.QLabel(self.frame)
            self.header_label.setGeometry(QtCore.QRect(10, 0, 251, 51))
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(25)
            font.setBold(True)
            font.setWeight(75)
            self.header_label.setFont(font)
            self.header_label.setLayoutDirection(QtCore.Qt.LeftToRight)
            self.header_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
            self.header_label.setObjectName("header_label")
            self.algorithm = QtWidgets.QLabel(self.frame)
            self.algorithm.setGeometry(QtCore.QRect(30, 600, 861, 271))
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(14)
            self.algorithm.setFont(font)
            self.algorithm.setObjectName("algorithm")
            self.gif_label = QtWidgets.QLabel(self.frame)
            self.gif_label.setGeometry(QtCore.QRect(40, 320, 371, 191))
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(14)
            self.gif_label.setFont(font)
            self.gif_label.setScaledContents(True)
            self.gif_label.setObjectName("gif_label")
            self.algo_info_label = QtWidgets.QLabel(self.frame)
            self.algo_info_label.setGeometry(QtCore.QRect(10, 60, 901, 231))
            font = QtGui.QFont()
            font.setFamily("Times New Roman")
            font.setPointSize(14)
            font.setBold(False)
            font.setWeight(50)
            self.algo_info_label.setFont(font)
            self.algo_info_label.setFocusPolicy(QtCore.Qt.NoFocus)
            self.algo_info_label.setTextFormat(QtCore.Qt.AutoText)
            self.algo_info_label.setScaledContents(False)
            self.algo_info_label.setAlignment(QtCore.Qt.AlignJustify|QtCore.Qt.AlignTop)
            self.algo_info_label.setWordWrap(True)
            self.algo_info_label.setIndent(1)
            self.algo_info_label.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse)
            self.algo_info_label.setObjectName("algo_info_label")
            self.verticalLayout_2.addWidget(self.frame)
            self.scrollArea.setWidget(self.scrollAreaWidgetContents)
            self.verticalLayout.addWidget(self.scrollArea)
            MainWindow.setCentralWidget(self.centralwidget)
            self.statusbar = QtWidgets.QStatusBar(MainWindow)
            self.statusbar.setObjectName("statusbar")
            MainWindow.setStatusBar(self.statusbar)

            self.retranslateUi(MainWindow)
            QtCore.QMetaObject.connectSlotsByName(MainWindow)

        def retranslateUi(self, MainWindow):
            _translate = QtCore.QCoreApplication.translate
            MainWindow.setWindowTitle(_translate("MainWindow", "Merge Sort"))
            item = self.complexity_table.verticalHeaderItem(0)
            item.setText(_translate("MainWindow", "Mergesort"))
            item = self.complexity_table.horizontalHeaderItem(0)
            item.setText(_translate("MainWindow", "Best"))
            item = self.complexity_table.horizontalHeaderItem(1)
            item.setText(_translate("MainWindow", "Average"))
            item = self.complexity_table.horizontalHeaderItem(2)
            item.setText(_translate("MainWindow", "Worst"))
            item = self.complexity_table.horizontalHeaderItem(3)
            item.setText(_translate("MainWindow", "Memory"))
            item = self.complexity_table.horizontalHeaderItem(4)
            item.setText(_translate("MainWindow", "Stable"))
            __sortingEnabled = self.complexity_table.isSortingEnabled()
            self.complexity_table.setSortingEnabled(False)
            item = self.complexity_table.item(0, 0)
            item.setText(_translate("MainWindow", "n log (n)"))
            item = self.complexity_table.item(0, 1)
            item.setText(_translate("MainWindow", "n log (n)"))
            item = self.complexity_table.item(0, 2)
            item.setText(_translate("MainWindow", "n log (n)"))
            item = self.complexity_table.item(0, 3)
            item.setText(_translate("MainWindow", "n"))
            item = self.complexity_table.item(0, 4)
            item.setText(_translate("MainWindow", "Yes"))
            self.complexity_table.setSortingEnabled(__sortingEnabled)
            self.complexity.setText(_translate("MainWindow", "Complexity"))
            self.algo_label.setText(_translate("MainWindow", "Algorithm:"))
            self.header_label.setText(_translate("MainWindow", "Mergesort"))
            self.algorithm.setText(_translate("MainWindow", "MergeSort(arr[], l,  r)\n"
    "If r > l\n"
    "     1. Find the middle point to divide the array into two halves:  \n"
    "             middle m = l+ (r-l)/2\n"
    "     2. Call mergeSort for first half:   \n"
    "             Call mergeSort(arr, l, m)\n"
    "     3. Call mergeSort for second half:\n"
    "             Call mergeSort(arr, m+1, r)\n"
    "     4. Merge the two halves sorted in step 2 and 3:\n"
    "             Call merge(arr, l, m, r)"))
            self.gif_label.setText(_translate("MainWindow", "Merge-sort-example-gif"))
            self.movie = QMovie(r".\gifs\Merge-sort.gif")
            self.gif_label.setMovie(self.movie)
            self.movie.start()

            self.algo_info_label.setText(_translate("MainWindow", "In computer science, merge sort (also commonly spelled mergesort) is an efficient, general-\n"
    " purpose, comparison-based sorting algorithm. Most implementations produce a stable sort, \n"
    " which means that the implementation preserves the input order of equal elements in the sorted \n"
    " output. Mergesort is a divide and conquer algorithm that was invented by John von Neumann\n"
    " in 1945.\n"
    "An example of merge sort. First divide the list into the smallest unit (1 element), then \n"
    " compare each element with the adjacent list to sort and merge the two adjacent lists. \n"
    " Finally all the elements are sorted and merged.\n"
    ""))



    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    app.exec_()
